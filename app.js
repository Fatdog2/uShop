
//Getting the dependencies
const express = require('express');
const app = express();
const bodyParser = require('body-parser');
const mongoose = require('mongoose');
const port = 3000;


//Body Parser Middleware
// parse application/x-www-form-urlencoded
app.use(bodyParser.urlencoded({ extended: false }))

// parse application/json
app.use(bodyParser.json())

//connect to db
mongoose.connect('mongodb://localhost:27017/uShop',{useNewUrlParser: true})
let db = mongoose.connection;
//check db connection 
db.once('open', function() {
    console.log('Connected to ' + db.name)
})
//check for db error
db.on('error', function(err) {
    console.log(err);
})


//Starting App (on localhost:3000/)
app.listen(port, function() {
    console.log('Server started on port ' + port);
});

//Setting the public directory
app.use(express.static('public'));

//Setting up view engine (Pug)
var path = require('path');
app.set('views', path.join(__dirname, 'views'));
app.set('view engine', 'pug');

//Rendering Home Page
app.get('/', function(req, res) {
    res.render('home');
});

//Rendering User Create Acc Page
app.get('/userCreateAcc', function(req, res) {
    res.render('userCreateAcc')
});

//Rendering Shop Create Acc Page
app.get('/shopCreateAcc', function(req, res) {
    res.render('shopCreateAcc')
});

//Proccessing a Create User Acc Post Request
const User = require('./models/userModel')
app.post('/userCreateAcc', function(req,res) {

    let data = req.body;

    //Data validation
    if(data.email !== data.reEmail) {
        if(data.password !== data.rePassword) {
            //Tell user they need to have matching password and email
            res.redirect('userCreateAcc')
        }
    //Tell user they need to have matching email
    res.redirect('userCreateAcc')
    }
    else if (data.password !== data.rePassword) {
        if(data.email !== data.reEmail) {
            //Tell user they need to have matching password and email
            res.redirect('userCreateAcc')
        }
    //Tell user they need to have matching password
    }
    else {
    
    //Creating the User
    let user = new User();
    user.givenName = data.givenName;
    user.lastName = data.lastName;
    user.address = data.address;
    user.state = data.state;
    user.postcode = data.postcode;
    user.dob = data.dob;
    user.mobileNumber = data.mobileNumber;
    user.email = data.email;
    user.password = data.password;

    //Adding user to db (an object id is generated by mongo)
    user.save(function(err) {
        if(err) {
            console.log(err)
            return;
        } else {
            res.redirect('/signin')
        }
        
    })
    }
});

//Proccessing a Create User Acc Post Request
const Shop = require('./models/shopModel')
app.post('/shopCreateAcc', function(req,res) {

    
    //Creating the User
    let shop = new Shop();
    let data = req.body;
    console.log(data)
    

    //Adding the categories to the categories array.
    switch(Number(data.categoryCount)){
        case 1:
            shop.categories.push(data.category1)
            break;
        case 2:
            shop.categories.push(data.category1)
            shop.categories.push(data.category2)
            break;
        case 3:
            shop.categories.push(data.category1)
            shop.categories.push(data.category2)
            shop.categories.push(data.category3)
            break;
    }
    //Adding the fields to the shop object
    shop.name = data.name;
    shop.email = data.email;
    shop.password = data.password;
    shop.sales = {
        items_sold: 0,
        orders: 0,
        revenue: 0,
        profit: 0,
        item_ranks: [],
    }
    shop.inventory = [];


    //Adding user to db (an object id is generated by mongo)
    shop.save(function(err) {
        if(err) {
            console.log(err)
            return;
        } else {
            res.redirect('/signin')
        }
        
    })
});

//Rendering Signin Page
app.get('/signin', function(req, res) {
    res.render('signin', {
        err: false,
    })
});

//Rendering Signin Page with err
app.get('/signin/err', function(req, res) {
    res.render('signin',{
        err: true,
    })
});


app.post('/signin', function(req, res) {
    let data  = req.body;
    User.find({email: data.email},'_id email password', function(err, docs) {
        if(err) {
            console.log(err);
        }
        else {
            
            //Checking if its a shop instead
            Shop.find({email: data.email}, '_id email password', function(err,docs) {
                if(err) {
                    console.log(err);
                }
                else {
                    
                    
                    
                    //Checking if it returned any shops
                    if(docs.length === 0) {
                        console.log('no shop found')
                        res.redirect('/signin/err')
                    }
                    else {
                        
                        //Finding the matching user
                        for(i = 0; i < docs.length; i++) {
                            if(data.password == docs[i].password) {
                                res.redirect('/'+docs[i]._id + '/shophome')
                            }
                        }
                    }
                }
            })

            //Finding the matching user
            if(docs.length === 0) {
                console.log('no user found')
                res.redirect('/signin/err');
            }
            else {
                for(i = 0; i < docs.length; i++) {
                    if(data.password == docs[i].password) {
                        res.redirect('/'+docs[i]._id + '/userhome')
                    }
                }
            }
        }
    })
    
})


